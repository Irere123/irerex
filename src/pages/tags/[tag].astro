---
import { ViewTransitions } from "astro:transitions";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import ArticleCard from "../../components/ArticleCard.astro";
import Tag from "../../components/Tag.astro";

export async function getStaticPaths() {
  return [
    { params: { tag: "rust" } },
    { params: { tag: "elixir" } },
    { params: { tag: "typescript" } },
  ];
}

type Props = {};

const { tag } = Astro.params;
const posts = (await getCollection("blog")).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
const filteredPosts = posts.filter((post) => post.data.tags?.includes(tag));
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <ViewTransitions transition:animate={"slide"} />
  </head>
  <body>
    <Header title={SITE_TITLE} />
    <main>
      <h3>Blog</h3>
      <p>
        This is where you can find all the technical written content on Rust,
        Elixir, and Typescript Languages!
      </p>

      <div class="tags">
        <a href="/"><Tag name="All" /></a>
        <a href="/tags/rust"><Tag name="Rust" /></a>
        <a href="/tags/elixir"><Tag name="Elixir" /></a>
        <a href="/tags/typescript"><Tag name="Typescript" /></a>
      </div>

      <p>{filteredPosts.length} posts</p>
      <section>
        {
          filteredPosts.map((post) => (
            <ArticleCard
              href={`/blog/${post.slug}`}
              description={post.data.description}
              pubDate={post.data.pubDate}
              title={post.data.title}
            />
          ))
        }
      </section>
    </main>
    <style>
      .tags {
        display: flex;
        gap: 1rem;
      }
    </style>
  </body>
</html>
